{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\project-radio\\\\src\\\\pages\\\\Radio\\\\RadioPilot\\\\RadioPilot.jsx\",\n  _s = $RefreshSig$();\nimport styles from './RadioPilot.module.scss';\nimport { useRef, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '../../../components/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RadioPilot() {\n  _s();\n  const navigate = useNavigate();\n  const audioRef = useRef < HTMLAudioElement | null > null;\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Очистка при размонтировании компонента\n  useEffect(() => {\n    return () => {\n      if (audioRef.current) {\n        audioRef.current.pause();\n        audioRef.current = null;\n      }\n    };\n  }, []);\n  const handleClickBack = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current = null;\n    }\n    navigate('/pilot');\n  };\n  const handleTogglePlay = () => {\n    // Если аудио уже играет - останавливаем\n    if (isPlaying && audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setIsPlaying(false);\n      return;\n    }\n\n    // Создаем новый экземпляр Audio\n    const audio = new Audio('/audio/audio-pilot.mp3');\n    audioRef.current = audio;\n    audio.addEventListener('ended', () => {\n      setIsPlaying(false);\n      audioRef.current = null;\n    });\n    audio.play().then(() => setIsPlaying(true)).catch(error => {\n      console.error('Ошибка воспроизведения:', error);\n      audio.muted = true;\n      audio.play().then(() => setIsPlaying(true)).catch(e => console.error('Не удалось воспроизвести:', e));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: styles.button,\n        onClick: handleTogglePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.button,\n        onClick: handleClickBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(RadioPilot, \"8KN8vUOXrng4vzOTkFg4DkZ3e74=\", false, function () {\n  return [useNavigate];\n});\n_c = RadioPilot;\nexport default RadioPilot;\nvar _c;\n$RefreshReg$(_c, \"RadioPilot\");","map":{"version":3,"names":["styles","useRef","useState","useEffect","useNavigate","Button","jsxDEV","_jsxDEV","RadioPilot","_s","navigate","audioRef","HTMLAudioElement","isPlaying","setIsPlaying","current","pause","handleClickBack","handleTogglePlay","currentTime","audio","Audio","addEventListener","play","then","catch","error","console","muted","e","className","wrapper","children","content","button","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/work/project-radio/src/pages/Radio/RadioPilot/RadioPilot.jsx"],"sourcesContent":["import styles from './RadioPilot.module.scss';\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Button from '../../../components/Button/Button';\r\n\r\nfunction RadioPilot() {\r\n    const navigate = useNavigate();\r\n    const audioRef = (useRef < HTMLAudioElement) | (null > null);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n    // Очистка при размонтировании компонента\r\n    useEffect(() => {\r\n        return () => {\r\n            if (audioRef.current) {\r\n                audioRef.current.pause();\r\n                audioRef.current = null;\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const handleClickBack = () => {\r\n        if (audioRef.current) {\r\n            audioRef.current.pause();\r\n            audioRef.current = null;\r\n        }\r\n        navigate('/pilot');\r\n    };\r\n\r\n    const handleTogglePlay = () => {\r\n        // Если аудио уже играет - останавливаем\r\n        if (isPlaying && audioRef.current) {\r\n            audioRef.current.pause();\r\n            audioRef.current.currentTime = 0;\r\n            setIsPlaying(false);\r\n            return;\r\n        }\r\n\r\n        // Создаем новый экземпляр Audio\r\n        const audio = new Audio('/audio/audio-pilot.mp3');\r\n        audioRef.current = audio;\r\n\r\n        audio.addEventListener('ended', () => {\r\n            setIsPlaying(false);\r\n            audioRef.current = null;\r\n        });\r\n\r\n        audio\r\n            .play()\r\n            .then(() => setIsPlaying(true))\r\n            .catch(error => {\r\n                console.error('Ошибка воспроизведения:', error);\r\n                audio.muted = true;\r\n                audio\r\n                    .play()\r\n                    .then(() => setIsPlaying(true))\r\n                    .catch(e => console.error('Не удалось воспроизвести:', e));\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.content}>\r\n                <Button className={styles.button} onClick={handleTogglePlay} />\r\n                <Button className={styles.button} onClick={handleClickBack} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RadioPilot;\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,0BAA0B;AAC7C,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAIV,MAAM,GAAGW,gBAAgB,GAAK,IAAI,GAAG,IAAK;EAC5D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACAC,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACT,IAAIQ,QAAQ,CAACI,OAAO,EAAE;QAClBJ,QAAQ,CAACI,OAAO,CAACC,KAAK,CAAC,CAAC;QACxBL,QAAQ,CAACI,OAAO,GAAG,IAAI;MAC3B;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAIN,QAAQ,CAACI,OAAO,EAAE;MAClBJ,QAAQ,CAACI,OAAO,CAACC,KAAK,CAAC,CAAC;MACxBL,QAAQ,CAACI,OAAO,GAAG,IAAI;IAC3B;IACAL,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC3B;IACA,IAAIL,SAAS,IAAIF,QAAQ,CAACI,OAAO,EAAE;MAC/BJ,QAAQ,CAACI,OAAO,CAACC,KAAK,CAAC,CAAC;MACxBL,QAAQ,CAACI,OAAO,CAACI,WAAW,GAAG,CAAC;MAChCL,YAAY,CAAC,KAAK,CAAC;MACnB;IACJ;;IAEA;IACA,MAAMM,KAAK,GAAG,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IACjDV,QAAQ,CAACI,OAAO,GAAGK,KAAK;IAExBA,KAAK,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAM;MAClCR,YAAY,CAAC,KAAK,CAAC;MACnBH,QAAQ,CAACI,OAAO,GAAG,IAAI;IAC3B,CAAC,CAAC;IAEFK,KAAK,CACAG,IAAI,CAAC,CAAC,CACNC,IAAI,CAAC,MAAMV,YAAY,CAAC,IAAI,CAAC,CAAC,CAC9BW,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CN,KAAK,CAACQ,KAAK,GAAG,IAAI;MAClBR,KAAK,CACAG,IAAI,CAAC,CAAC,CACNC,IAAI,CAAC,MAAMV,YAAY,CAAC,IAAI,CAAC,CAAC,CAC9BW,KAAK,CAACI,CAAC,IAAIF,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEG,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC;EACV,CAAC;EAED,oBACItB,OAAA;IAAKuB,SAAS,EAAE9B,MAAM,CAAC+B,OAAQ;IAAAC,QAAA,eAC3BzB,OAAA;MAAKuB,SAAS,EAAE9B,MAAM,CAACiC,OAAQ;MAAAD,QAAA,gBAC3BzB,OAAA,CAACF,MAAM;QAACyB,SAAS,EAAE9B,MAAM,CAACkC,MAAO;QAACC,OAAO,EAAEjB;MAAiB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/DhC,OAAA,CAACF,MAAM;QAACyB,SAAS,EAAE9B,MAAM,CAACkC,MAAO;QAACC,OAAO,EAAElB;MAAgB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC9B,EAAA,CA9DQD,UAAU;EAAA,QACEJ,WAAW;AAAA;AAAAoC,EAAA,GADvBhC,UAAU;AAgEnB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}