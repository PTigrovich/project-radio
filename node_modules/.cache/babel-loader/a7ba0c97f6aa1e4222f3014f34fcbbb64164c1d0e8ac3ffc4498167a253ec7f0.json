{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\project-radio\\\\src\\\\pages\\\\Main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport styles from './Main.module.scss';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const navigate = useNavigate();\n  const handleClick = () => {\n    navigate('/home');\n  };\n  const videoRef = useRef(null);\n  useEffect(() => {\n    // Проверяем, что ссылка на видео существует\n    if (!videoRef.current) return;\n    const video = videoRef.current;\n    const handlePlay = async () => {\n      try {\n        await video.play();\n      } catch (error) {\n        console.log('Автовоспроизведение заблокировано:', error);\n        // Fallback: включаем без звука\n        video.muted = true;\n        try {\n          await video.play();\n        } catch (err) {\n          console.error('Не удалось воспроизвести видео:', err);\n        }\n      }\n    };\n\n    // Обработчик для события, когда видео готово к воспроизведению\n    const handleCanPlay = () => {\n      handlePlay();\n      video.removeEventListener('canplay', handleCanPlay);\n    };\n    video.addEventListener('canplay', handleCanPlay);\n\n    // Очистка при размонтировании\n    return () => {\n      if (videoRef.current) {\n        videoRef.current.pause();\n        videoRef.current.removeEventListener('canplay', handleCanPlay);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleClick,\n    className: styles.background,\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: styles.videoBackground,\n      autoPlay: true,\n      loop: true,\n      muted: false,\n      playsInline: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/assets/backgrou\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), \"\\u0412\\u0430\\u0448 \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440 \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u0432\\u0438\\u0434\\u0435\\u043E.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"1tqGQv/lOn/iXljKoHJyvtED4/c=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["styles","useNavigate","useEffect","useRef","jsxDEV","_jsxDEV","Main","_s","navigate","handleClick","videoRef","current","video","handlePlay","play","error","console","log","muted","err","handleCanPlay","removeEventListener","addEventListener","pause","onClick","className","background","children","ref","videoBackground","autoPlay","loop","playsInline","src","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/work/project-radio/src/pages/Main/Main.jsx"],"sourcesContent":["import styles from './Main.module.scss';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useRef } from 'react';\n\nfunction Main() {\n    const navigate = useNavigate();\n\n    const handleClick = () => {\n        navigate('/home'); \n    };\n\n\t \n\t const videoRef = useRef(null);\n\n\t useEffect(() => {\n         // Проверяем, что ссылка на видео существует\n         if (!videoRef.current) return;\n\n         const video = videoRef.current;\n\n         const handlePlay = async () => {\n             try {\n                 await video.play();\n             } catch (error) {\n                 console.log('Автовоспроизведение заблокировано:', error);\n                 // Fallback: включаем без звука\n                 video.muted = true;\n                 try {\n                     await video.play();\n                 } catch (err) {\n                     console.error('Не удалось воспроизвести видео:', err);\n                 }\n             }\n         };\n\n         // Обработчик для события, когда видео готово к воспроизведению\n         const handleCanPlay = () => {\n             handlePlay();\n             video.removeEventListener('canplay', handleCanPlay);\n         };\n\n         video.addEventListener('canplay', handleCanPlay);\n\n         // Очистка при размонтировании\n         return () => {\n             if (videoRef.current) {\n                 videoRef.current.pause();\n                 videoRef.current.removeEventListener('canplay', handleCanPlay);\n             }\n         };\n     }, []);\n\t \n\n    return (\n        <div onClick={handleClick} className={styles.background}>\n            <video\n                ref={videoRef}\n                className={styles.videoBackground}\n                autoPlay\n                loop\n                muted={false}\n                playsInline\n            >\n                <source src=\"/assets/backgrou\" type=\"video/mp4\" />\n                Ваш браузер не поддерживает видео.\n            </video>\n        </div>\n    );\n}\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,oBAAoB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACtBD,QAAQ,CAAC,OAAO,CAAC;EACrB,CAAC;EAGH,MAAME,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACT;IACA,IAAI,CAACQ,QAAQ,CAACC,OAAO,EAAE;IAEvB,MAAMC,KAAK,GAAGF,QAAQ,CAACC,OAAO;IAE9B,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMD,KAAK,CAACE,IAAI,CAAC,CAAC;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,KAAK,CAAC;QACxD;QACAH,KAAK,CAACM,KAAK,GAAG,IAAI;QAClB,IAAI;UACA,MAAMN,KAAK,CAACE,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC,OAAOK,GAAG,EAAE;UACVH,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEI,GAAG,CAAC;QACzD;MACJ;IACJ,CAAC;;IAED;IACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;MACxBP,UAAU,CAAC,CAAC;MACZD,KAAK,CAACS,mBAAmB,CAAC,SAAS,EAAED,aAAa,CAAC;IACvD,CAAC;IAEDR,KAAK,CAACU,gBAAgB,CAAC,SAAS,EAAEF,aAAa,CAAC;;IAEhD;IACA,OAAO,MAAM;MACT,IAAIV,QAAQ,CAACC,OAAO,EAAE;QAClBD,QAAQ,CAACC,OAAO,CAACY,KAAK,CAAC,CAAC;QACxBb,QAAQ,CAACC,OAAO,CAACU,mBAAmB,CAAC,SAAS,EAAED,aAAa,CAAC;MAClE;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGP,oBACIf,OAAA;IAAKmB,OAAO,EAAEf,WAAY;IAACgB,SAAS,EAAEzB,MAAM,CAAC0B,UAAW;IAAAC,QAAA,eACpDtB,OAAA;MACIuB,GAAG,EAAElB,QAAS;MACde,SAAS,EAAEzB,MAAM,CAAC6B,eAAgB;MAClCC,QAAQ;MACRC,IAAI;MACJb,KAAK,EAAE,KAAM;MACbc,WAAW;MAAAL,QAAA,gBAEXtB,OAAA;QAAQ4B,GAAG,EAAC,kBAAkB;QAACC,IAAI,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,uLAEtD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAAC/B,EAAA,CAhEQD,IAAI;EAAA,QACQL,WAAW;AAAA;AAAAsC,EAAA,GADvBjC,IAAI;AAkEb,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}